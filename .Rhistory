library(SocGen)
library(igraph)
library(dplyr)
indiv_covars <- read.csv("Outputs/individual_covariates.csv")
setwd("C:/TAMUG/Foroughirad Lab/Kin Association/temporal_kinship")
indiv_covars <- read.csv("Outputs/individual_covariates.csv")
indiv_covars$entrydate <- as.Date(indiv_covars$entrydate)
indiv_covars$departdate <- as.Date(indiv_covars$departdate)
sightings <- read.csv("Outputs/sightings.csv")
dates <- sort(unique(sightings$Observation.Date))
#Adding separate columns for Repro.ID and Age.ID
sightings <- sightings %>%
mutate(Repro.ID = sub("^([^.]+\\.[^.]+).*", "\\1", Combined.ID)) %>%
mutate(Age.ID = paste(sub("\\..*", "", Combined.ID), sub(".*\\.(\\w+)$", "\\1", Combined.ID), sep = "."))
rs_tab <- table(sightings$Combined.ID)
sightings$ReproSightings <- rs_tab
View(sightings)
View(sightings)
relatedness <- read.csv("Raw Data/RelatednessEstimates_2024.csv")
genotypes <- unique(c(relatedness$ID1, relatedness$ID2))
indiv_covars$genotyped <- ifelse(indiv_covars$Dolphin.ID %in% genotypes, "Y", "N")
statuses <- sightings[,c("Dolphin.ID", "Combined.ID")] |> unique()
affil_females <- merge(statuses, indiv_covars, by = "Dolphin.ID", all.x = TRUE)
affil_females <- affil_females[which(affil_females$genotyped == "Y"), ]
#Adding separate columns for Repro.ID and Age.ID
affil_females <- affil_females %>%
mutate(Repro.ID = sub("^([^.]+\\.[^.]+).*", "\\1", Combined.ID)) %>%
mutate(Age.ID = paste(sub("\\..*", "", Combined.ID), sub(".*\\.(\\w+)$", "\\1", Combined.ID), sep = "."))
# mask the data so that association rates are only estimated in the timeframe where both members are alive
affil_mask <- schedulize(affil_females,
id = "Combined.ID",
start = "entrydate",
end = "departdate",
dates = dates,
format = "mask")
affil_sightings <- sightings[which(sightings$Combined.ID %in% affil_females$Combined.ID), ]
#Adding separate columns for Repro.ID and Age.ID
affil_sightings <- affil_sightings %>%
mutate(Repro.ID = sub("^([^.]+\\.[^.]+).*", "\\1", Combined.ID)) %>%
mutate(Age.ID = paste(sub("\\..*", "", Combined.ID), sub(".*\\.(\\w+)$", "\\1", Combined.ID), sep = "."))
#Calculating SRI
masked_network <- simple_ratio(sightings = affil_sightings,
group_variable = "Observation.ID",
dates = "Observation.Date",
IDs = "Combined.ID",
mask = affil_mask)
masked_network[is.nan(masked_network)] <- 0
masked_network[is.na(masked_network)] <- 0
network <- graph_from_adjacency_matrix(masked_network, mode = "undirected", weighted = TRUE)
# calculate strength (summed edge weights) per ID
strength(network)
# calculate strength (summed edge weights) per ID
tot_str <- strength(network)
tot_str_df <- data.frame(name = V(network)$name, strength = tot_str)
write.csv(tot_str_df, "Outputs/total_strength.csv", row.names = FALSE)
# mask the data so that association rates are only estimated in the timeframe where both members are alive
affil_mask_repro <- schedulize(affil_females,
id = "Repro.ID",
start = "entrydate",
end = "departdate",
dates = dates,
format = "mask")
repro_mask_network <- simple_ratio(sightings = affil_sightings,
group_variable = "Observation.ID",
dates = "Observation.Date",
IDs = "Repro.ID",
mask = affil_mask_repro)
repro_mask_network[is.nan(repro_mask_network)] <- 0
repro_mask_network[is.na(repro_mask_network)] <- 0
repro_network <- graph_from_adjacency_matrix(repro_mask_network, mode = "undirected", weighted = TRUE)
str_repro <- strength(repro_network)
merge_repro_str <- merge(sightings, str_repro_df, by.x = "Repro.ID", by.y = "name", all.x = TRUE)
str_repro_df <- data.frame(name = V(repro_network)$name, strength = str_repro)
merge_repro_str <- merge(sightings, str_repro_df, by.x = "Repro.ID", by.y = "name", all.x = TRUE)
View(merge_repro_str)
#Setting vertex attributes to each reproductive category
repro_network <- set_vertex_attr(repro_network, "ReproCat",
value = sightings$ReproCat[match(V(repro_network)$name, sightings$Repro.ID)])
View(repro_network)
affil_mask_age <- schedulize(affil_females,
id = "Age.ID",
start = "entrydate",
end = "departdate",
dates = dates,
format = "mask")
View(sightings)
pairwise <- read.csv("Outputs/pairwise_covariates.csv")
View(pairwise)
View(pairwise)
View(sightings)
