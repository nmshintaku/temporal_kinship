setwd("C:/TAMUG/Foroughirad Lab/Kin Association/temporal_kinship")
library(SocGen)
library(igraph)
indiv_covars <- read.csv("Outputs/individual_covariates.csv")
indiv_covars$entrydate <- as.Date(indiv_covars$entrydate)
indiv_covars$departdate <- as.Date(indiv_covars$departdate)
sightings <- read.csv("Outputs/sightings.csv")
dates <- sort(unique(sightings$Observation.Date))
rs_tab <- table(sightings$Combined.ID)
sightings$ReproSightings <- rs_tab[match(sightings$Combined.ID, names(rs_tab))]
View(sightings)
indiv_covars <- read.csv("Outputs/individual_covariates.csv")
indiv_covars$entrydate <- as.Date(indiv_covars$entrydate)
indiv_covars$departdate <- as.Date(indiv_covars$departdate)
sightings <- read.csv("Outputs/sightings.csv")
View(sightings)
dates <- sort(unique(sightings$Observation.Date))
rs_tab <- table(sightings$Combined.ID)
sightings$ReproSightings <- rs_tab[match(sightings$Combined.ID, names(rs_tab))]
write.csv(sightings, "Outputs/sightings.csv", row.names = FALSE)
relatedness <- read.csv("Raw Data/RelatednessEstimates_2024.csv")
genotypes <- unique(c(relatedness$ID1, relatedness$ID2))
indiv_covars$genotyped <- ifelse(indiv_covars$Dolphin.ID %in% genotypes, "Y", "N")
View(indiv_covars)
statuses <- sightings[,c("Dolphin.ID", "Combined.ID")] |> unique()
View(statuses)
affil_females <- merge(statuses, indiv_covars, by = "Dolphin.ID", all.x = TRUE)
View(affil_females)
affil_females <- affil_females[which(affil_females$genotyped == "Y"), ]
# mask the data so that association rates are only estimated in the timeframe where both members are alive
affil_mask <- schedulize(affil_females,
id = "Combined.ID",
start = "entrydate",
end = "departdate",
dates = dates,
format = "mask")
affil_sightings <- sightings[which(sightings$Combined.ID %in% affil_females$Combined.ID), ]
View(affil_sightings)
masked_network <- simple_ratio(sightings = affil_sightings,
group_variable = "Observation.ID",
dates = "Observation.Date",
IDs = "Combined.ID",
mask = affil_mask)
View(masked_network)
masked_network[is.nan(masked_network)] <- 0
masked_network[is.na(masked_network)] <- 0
View(masked_network)
network <- graph_from_adjacency_matrix(masked_network, mode = "undirected", weighted = TRUE)
View(network)
# calculate strength (summed edge weights) per ID
strength(network)
View(affil_females)
View(masked_network)
View(network)
pairwise <- read.csv("Outputs/pairwise_covariates.csv")
View(pairwise)
pairwise <- pairwise %>%
mutate(Closekin = ifelse(DyadML >= 0.125, "Y","N"))
library(tidyr)
library(dplyr)
pairwise <- pairwise %>%
mutate(Closekin = ifelse(DyadML >= 0.125, "Y","N"))
View(pairwise)
pairwise <- pairwise %>%
mutate(Closekin = ifelse(is.na(DyadML) | DyadML >= 0.125, "Y","N"))
pairwise <- pairwise %>%
mutate(Closekin = ifelse(is.na(DyadML) | DyadML >= 0.125, "N","Y"))
pairwise <- pairwise %>%
mutate(Closekin = ifelse(is.na(DyadML) | DyadML < 0.125, "N","Y"))
write.csv(combinations, "Outputs/pairwise_covariates.csv", row.names = FALSE)
write.csv(pairwise, "Outputs/pairwise_covariates.csv", row.names = FALSE)
View(pairwise)
View(masked_network)
View(affil_females)
View(masked_network)
categories <- c("closekin", "notclose")
kin <- set.edge.attribute(network, "kinship", value = catgories)
kin <- set_edge_attr(network, "kinship", value = catgories)
kin <- set_edge_attr(network, "kinship", value = categories)
plot(network)
View(affil_sightings)
induced_subgraph(network)
induced_subgraph(network, vids)
View(affil_females)
View(masked_network)
View(sightings)
View(affil_mask)
View(pairwise)
